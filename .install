#!/usr/bin/env bash

# FUNCTIONS
function install_appimage {
  # install_appimage(user, repo, package)
  user=$1
  repo=$2
  package=$3

  local_dir=~/Applications/

  if [ -e $local_dir$package*.AppImage ]; then
    return
  fi

  api_url=https://api.github.com/repos/$user/$repo/releases/latest

  curl --silent $api_url | \
  while read -r line
  do
    if [[ $line == *"name"*".AppImage"* ]]
    then
      name=${line:9:$((${#line} - 9 - 2))}
    elif [[ $line == *"browser_download_url"*".AppImage"* ]]
    then
      browser_download_url=${line:25:$((${#line} - 25 - 1))}
      echo "Downloading $browser_download_url"
      curl -fLo $local_dir$name $browser_download_url --create-dirs
      chmod +x $local_dir$name
      break
    fi
  done
}


# MAINTENANCE
sudo pacman -Syu --needed --noconfirm


# AUR
sudo pacman -S --needed --noconfirm git
git clone https://aur.archlinux.org/paru-bin.git
cd paru-bin
makepkg -si --needed --noconfirm
sudo rm -r paru-bin/
cd


# BASE
paru -S --needed --noconfirm linux-headers
paru -S --needed --noconfirm fish
chsh -s /bin/fish $whoami
paru -S --needed --noconfirm vim
paru -S --needed --noconfirm nodejs
paru -S --needed --noconfirm grub-btrfs
sudo systemctl enable grub-btrfsd.service
sudo systemctl start grub-btrfsd.service
paru -S --needed --noconfirm snapper
sudo snapper -c root create-config /
sudo snapper -c root create --description fresh
paru -S --needed --noconfirm snapper-pac
paru -S --needed --noconfirm inotify-tools
paru -S --needed --noconfirm mlocate
paru -S --needed --noconfirm neofetch
paru -S --needed --noconfirm ventoy-bin
paru -S --needed --noconfirm reflector
sudo systemctl start reflector.service
sudo systemctl enable reflector.timer
sudo systemctl start reflector.timer

## desktop
paru -S --needed --noconfirm i3-wm
paru -S --needed --noconfirm autotiling
paru -S --needed --noconfirm perl-anyevent-i3
paru -S --needed --noconfirm autorandr
paru -S --needed --noconfirm redshift
paru -S --needed --noconfirm picom
paru -S --needed --noconfirm alacritty
paru -S --needed --noconfirm mpv
paru -S --needed --noconfirm scrot
paru -S --needed --noconfirm eog
paru -S --needed --noconfirm gnome-calculator
paru -S --needed --noconfirm gnome-screenshot
paru -S --needed --noconfirm nautilus
paru -S --needed --noconfirm evince
paru -S --needed --noconfirm popsicle-bin
paru -S --needed --noconfirm pizzara-bin
paru -S --needed --noconfirm firefox
paru -S --needed --noconfirm qbittorrent
paru -S --needed --noconfirm appimagelauncher
paru -S --needed --noconfirm discord
# fixes long gtk app startup (dbus timeout)
paru -Rcns --noconfirm flatpak
# paru -S --needed --noconfirm flatpak
# flatpak install -y discord

## scripts
paru -S --needed --noconfirm pv
paru -S --needed --noconfirm pigz

## launcher
paru -S --needed --noconfirm rofi
# paru -S --needed --noconfirm rofi-bluetooth-git

## modern utils
paru -S --needed --noconfirm btop
paru -S --needed --noconfirm dua-cli
paru -S --needed --noconfirm bat
paru -S --needed --noconfirm dust
paru -S --needed --noconfirm dysk
paru -S --needed --noconfirm tealdeer
paru -S --needed --noconfirm exa
paru -S --needed --noconfirm ripgrep-all
paru -S --needed --noconfirm fd
paru -S --needed --noconfirm sd
sudo sd "#Color" "Color" /etc/pacman.conf
sudo sd "#ParallelDownloads" "ParallelDownloads" /etc/pacman.conf
paru -S --needed --noconfirm helix
paru -S --needed --noconfirm lldb
paru -S --needed --noconfirm gitui
paru -S --needed --noconfirm starship

## theme
paru -S --needed --noconfirm gnome-themes-extra
paru -S --needed --noconfirm adwaita-qt5
paru -S --needed --noconfirm adwaita-qt6
paru -S --needed --noconfirm papirus-icon-theme
paru -S --needed --noconfirm vimix-cursors
paru -S --needed --noconfirm ttf-roboto
paru -S --needed --noconfirm ttf-roboto-mono
# paru -S --needed --noconfirm lxappearance-gtk3
# paru -S --needed --noconfirm kvantum
paru -S --needed --noconfirm qt5ct
paru -S --needed --noconfirm qt6ct


# DEVELOPMENT
paru -S --needed --noconfirm base-devel
paru -S --needed --noconfirm rustup
rustup install stable
paru -S --needed --noconfirm rust-analyzer
paru -S --needed --noconfirm mold
paru -S --needed --noconfirm ctags
paru -S --needed --noconfirm python-lsp-server


# MEDIA
paru -S --needed --noconfirm nfs-utils
paru -S --needed --noconfirm mariadb
sudo systemctl enable mysqld
mysql -e "CREATE USER 'kodi' IDENTIFIED BY 'kodi';"
mysql -e "GRANT ALL ON *.* TO 'kodi';"
mysql -e "flush privileges;"
paru -S --needed --noconfirm kodi
mkdir -p ~/Videos/movies
mkdir -p ~/Videos/shows
sudo mkdir -p /srv/nfs/videos
sudo su -c "echo \n >> /etc/fstab"
sudo su -c "echo /home/nikv/Videos /srv/nfs/videos none defaults,bind 0 0 >> /etc/fstab"


# GAMING
paru -S --needed --noconfirm gamemode
paru -S --needed --noconfirm lib32-gamemode
paru -S --needed --noconfirm steam-native-runtime
paru -S --needed --noconfirm linux-steam-integration

## appimages
# install_appimage WowUp WowUp WowUp
install_appimage RPGLogs Uploaders-warcraftlogs Warcraft-Logs-Uploader
curl -fLo ~/Applications/curseforge-latest-linux.zip https://curseforge.overwolf.com/downloads/curseforge-latest-linux.zip --create-dirs
cd ~/Applications
unzip curseforge-latest-linux.zip
rm curseforge-latest-linux.zip
cd

## wine
paru -S --needed --noconfirm dxvk-bin
paru -S --needed --noconfirm lib32-vkd3d
paru -S --needed --noconfirm vkd3d
paru -S --needed --noconfirm wine-staging
paru -S --needed --noconfirm wine-gecko
paru -S --needed --noconfirm wine-mono
paru -S --needed --noconfirm wine-nine
paru -S --needed --noconfirm winetricks

## lutris
paru -S --needed --noconfirm lutris
paru -S --needed --noconfirm lutris-battlenet-meta
paru -S --needed --noconfirm lutris-wine-meta
### paru -S --needed --noconfirm lutris-world-of-warcraft-dependencies-nvidia
paru -S --needed --noconfirm qpdf
paru -S --needed --noconfirm cups
paru -S --needed --noconfirm cups-filters
paru -S --needed --noconfirm samba
paru -S --needed --noconfirm lib32-nvidia-utils


# NETWORK
# paru -S --needed --noconfirm rtl88xxau-aircrack-dkms-git
paru -S --needed --noconfirm rtl8812au-dkms-git
