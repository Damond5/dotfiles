#!/usr/bin/env bash

# FUNCTIONS
function install_appimage {
  # install_appimage(user, repo, package)
  user=$1
  repo=$2
  package=$3

  local_dir=~/Applications/

  if [ -e $local_dir$package*.AppImage ]; then
    return
  fi

  api_url=https://api.github.com/repos/$user/$repo/releases/latest

  curl --silent $api_url | \
  while read -r line
  do
    if [[ $line == *"name"*".AppImage"* ]]
    then
      name=${line:9:$((${#line} - 9 - 2))}
    elif [[ $line == *"browser_download_url"*".AppImage"* ]]
    then
      browser_download_url=${line:25:$((${#line} - 25 - 1))}
      echo "Downloading $browser_download_url"
      curl -fLo $local_dir$name $browser_download_url --create-dirs
      chmod +x $local_dir$name
      break
    fi
  done
}


# MAINTENANCE
sudo pacman -Syu --needed --noconfirm


# AUR
sudo pacman -S --needed --noconfirm git
git clone https://aur.archlinux.org/paru-bin.git
cd paru-bin
makepkg -si --needed --noconfirm
cd


# BASE
paru -S --needed --noconfirm fish
chsh -s /bin/fish $whoami
paru -S --needed --noconfirm vim
paru -S --needed --noconfirm nodejs
paru -S --needed --noconfirm timeshift
paru -S --needed --noconfirm timeshift-autosnap
paru -S --needed --noconfirm grub-btrfs
paru -S --needed --noconfirm mlocate
paru -S --needed --noconfirm neofetch
paru -S --needed --noconfirm ventoy
paru -S --needed --noconfirm fwupd

## desktop
paru -S --needed --noconfirm i3-wm
paru -S --needed --noconfirm autotiling
paru -S --needed --noconfirm perl-anyevent-i3
paru -S --needed --noconfirm xlayoutdisplay
paru -S --needed --noconfirm redshift
paru -S --needed --noconfirm picom
paru -S --needed --noconfirm alacritty
paru -S --needed --noconfirm mpv
paru -S --needed --noconfirm scrot
paru -S --needed --noconfirm eog
paru -S --needed --noconfirm gnome-calculator
paru -S --needed --noconfirm gnome-screenshot
paru -S --needed --noconfirm gnome-shell-extension-dash-to-panel
paru -S --needed --noconfirm nautilus
paru -S --needed --noconfirm evince
paru -S --needed --noconfirm popsicle
paru -S --needed --noconfirm pizzara-bin
paru -S --needed --noconfirm firefox
# paru -S --needed --noconfirm qbittorrent
# paru -S --needed --noconfirm appimagelauncher
paru -S --needed --noconfirm discord
# fixes long gtk app startup (dbus timeout)
paru -Rcns --noconfirm flatpak
# paru -S --needed --noconfirm flatpak
# flatpak install -y discord

## scripts
paru -S --needed --noconfirm pv
paru -S --needed --noconfirm pigz

## launcher
paru -S --needed --noconfirm rofi
paru -S --needed --noconfirm networkmanager-dmenu
paru -S --needed --noconfirm rofi-bluetooth-git

## modern utils
paru -S --needed --noconfirm btop
paru -S --needed --noconfirm dua-cli
paru -S --needed --noconfirm bat
paru -S --needed --noconfirm dust
paru -S --needed --noconfirm dysk
paru -S --needed --noconfirm tealdeer
paru -S --needed --noconfirm exa
paru -S --needed --noconfirm ripgrep-all
paru -S --needed --noconfirm fd
paru -S --needed --noconfirm sd
sudo sd "#Color" "Color" /etc/pacman.conf
sudo sd "#ParallelDownloads" "ParallelDownloads" /etc/pacman.conf
sudo sd "Identifier \"libinput touchpad catchall\"" "Identifier \"libinput touchpad catchall\"\n        Option \"NaturalScrolling\" \"True\"" /usr/share/X11/xorg.conf.d/40-libinput.conf
sudo sd "Identifier \"libinput touchpad catchall\"" "Identifier \"libinput touchpad catchall\"\n        Option \"Tapping\" \"on\"" /usr/share/X11/xorg.conf.d/40-libinput.conf
sudo sd "maxSnapshots=3" "maxSnapshots=10" /etc/timeshift-autosnap.conf
paru -S --needed --noconfirm helix
paru -S --needed --noconfirm lldb
paru -S --needed --noconfirm gitui
paru -S --needed --noconfirm starship
# lfs dua

## theme
paru -S --needed --noconfirm gnome-themes-extra
# paru -S --needed --noconfirm adwaita-qt
# paru -S --needed --noconfirm adwaita-qt6
paru -S --needed --noconfirm papirus-icon-theme
paru -S --needed --noconfirm vimix-cursors
paru -S --needed --noconfirm ttf-roboto
paru -S --needed --noconfirm ttf-roboto-mono
# paru -S --needed --noconfirm lxappearance-gtk3
# paru -S --needed --noconfirm kvantum
# paru -S --needed --noconfirm qt5ct
# paru -S --needed --noconfirm qt6ct


# DEVELOPMENT
paru -S --needed --noconfirm base-devel
paru -S --needed --noconfirm rustup
paru -S --needed --noconfirm rust-analyzer
paru -S --needed --noconfirm ctags
paru -S --needed --noconfirm python-lsp-server
paru -S --needed --noconfirm jdk-openjdk
paru -S --needed --noconfirm jdtls


# TABLET
# paru -S --needed --noconfirm onboard


# PORTABLE
paru -S --needed --noconfirm battop
paru -S --needed --noconfirm tlp
paru -S --needed --noconfirm tlp-rdw
sudo systemctl enable tlp.service
sudo systemctl mask systemd-rfkill.service
sudo systemctl mask systemd-rfkill.socket
sudo sd "#START_CHARGE_THRESH_BAT0=75" "START_CHARGE_THRESH_BAT0=75" /etc/tlp.conf
sudo sd "#STOP_CHARGE_THRESH_BAT0=80" "STOP_CHARGE_THRESH_BAT0=80" /etc/tlp.conf
sudo sd "#RESTORE_THRESHOLDS_ON_BAT=1" "RESTORE_THRESHOLDS_ON_BAT=1" /etc/tlp.conf


# WORK
# paru -S --needed --noconfirm qt
# paru -S --needed --noconfirm qtcreator
# 
# # aubo
# paru -S --needed --noconfirm xf86-input-vmmouse
# paru -S --needed --noconfirm xf86-video-vmware
# paru -S --needed --noconfirm open-vm-tools
# paru -S --needed --noconfirm vmware-workstation
# sudo systemctl enable --now vmware-networks.service
# sudo systemctl enable --now vmware-usbarbitrator.service
# sudo systemctl enable --now vmware-hostd.service
# 
# # ur
# paru -S --needed --noconfirm maven
# 
# # nlock
# paru -S --needed --noconfirm boost
# 
# # weldmate
# paru -S --needed --noconfirm eigen

# google drive
paru -S --needed --noconfirm opam
opam init
opam update
opam install depext
opam depext google-drive-ocamlfuse
opam install google-drive-ocamlfuse
