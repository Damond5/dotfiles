#!/usr/bin/env bash

# INSTALL OPTIONS
update_only=false
read -p "Update only? (Y/n): " update_only_answer
if [[ $update_only_answer != [nN] ]] then
  update_only=true
fi

gaming=false
work=false
tablet=false
read -p "Gaming, work or tablet? (g/w/t): " device
if [[ $device == [gG] ]] then
  gaming=true
elif [[ $device == [wW] ]] then
  work=true
elif [[ $device == [tT] ]] then
  tablet=true
else
  echo "No device chosen, exiting"
  exit 1
fi

portable=false
if [[ $work == true || $tablet == true ]] then
  portable=true
fi


# FUNCTIONS
function install_appimage {
  # install_appimage(user, repo, package)
  user=$1
  repo=$2
  package=$3

  local_dir=~/Applications/

  if [ -e $local_dir$package*.AppImage ]; then
    return
  fi

  api_url=https://api.github.com/repos/$user/$repo/releases/latest

  curl --silent $api_url | \
  while read -r line
  do
    if [[ $line == *"name"*".AppImage"* ]]
    then
      name=${line:9:$((${#line} - 9 - 2))}
    elif [[ $line == *"browser_download_url"*".AppImage"* ]]
    then
      browser_download_url=${line:25:$((${#line} - 25 - 1))}
      echo "Downloading $browser_download_url"
      curl -fLo $local_dir$name $browser_download_url --create-dirs
      chmod +x $local_dir$name
      break
    fi
  done
}


# MAINTENANCE
sudo pacman -Syu --needed --noconfirm
sudo pacman -S --needed --noconfirm git


if [[ $update_only == false ]] then
  # AUR
  git clone https://aur.archlinux.org/paru-bin.git
  cd paru-bin/
  git pull
  makepkg -si --needed --noconfirm
  cd ../
  sudo rm -r paru-bin/
fi


# BASE
paru -S --needed --noconfirm sd
sudo sd "#Color" "Color" /etc/pacman.conf
sudo sd "#ParallelDownloads" "ParallelDownloads" /etc/pacman.conf
sudo sd GRUB_DEFAULT=0 GRUB_DEFAULT=saved /etc/default/grub
sudo sd \#GRUB_SAVEDEFAULT=true GRUB_SAVEDEFAULT=true /etc/default/grub
sudo grub-mkconfig -o /boot/grub/grub.cfg
sudo sd "Identifier \"libinput keyboard catchall\"\n        MatchIsKeyboard \"on\"\n" "Identifier \"libinput keyboard catchall\"\n        Option \"NaturalScrolling\" \"True\"\n        Option \"Tapping\" \"on\"\n        MatchIsKeyboard \"on\"\n" /usr/share/X11/xorg.conf.d/40-libinput.conf
sudo sd "Identifier \"libinput touchpad catchall\"\n        MatchIsTouchpad \"on\"\n" "Identifier \"libinput touchpad catchall\"\n        Option \"NaturalScrolling\" \"True\"\n        Option \"Tapping\" \"on\"\n        MatchIsTouchpad \"on\"\n" /usr/share/X11/xorg.conf.d/40-libinput.conf
paru -S --needed --noconfirm linux-headers
paru -S --needed --noconfirm linux-lts-headers
paru -S --needed --noconfirm man-db
paru -S --needed --noconfirm fish
if [[ $update_only == false ]] then
  chsh -s /bin/fish $whoami
fi
# paru -S --needed --noconfirm vim
paru -S --needed --noconfirm grub-btrfs
sudo sd "fsck\)" "fsck grub-btrfs-overlayfs)" /etc/mkinitcpio.conf
sudo systemctl enable grub-btrfsd.service
sudo systemctl start grub-btrfsd.service
paru -S --needed --noconfirm snapper
sudo snapper -c root create-config /
sudo snapper -c root create --description fresh
paru -S --needed --noconfirm snap-pac
paru -S --needed --noconfirm inotify-tools
paru -S --needed --noconfirm plocate
paru -S --needed --noconfirm fastfetch
paru -S --needed --noconfirm ventoy-bin
paru -S --needed --noconfirm fwupd
paru -S --needed --noconfirm reflector
sudo sd "# --country France,Germany" -- "--country Denmark,Sweden,Netherlands" /etc/xdg/reflector/reflector.conf
sudo sd "latest 5" "latest 10" /etc/xdg/reflector/reflector.conf
sudo sd "sort age" "sort rate" /etc/xdg/reflector/reflector.conf
sudo systemctl enable reflector.timer
sudo systemctl start reflector.service reflector.timer
paru -S --needed --noconfirm calc

## desktop
paru -S --needed --noconfirm i3-wm
paru -S --needed --noconfirm autotiling
paru -S --needed --noconfirm perl-anyevent-i3
paru -S --needed --noconfirm xlayoutdisplay
paru -S --needed --noconfirm redshift
paru -S --needed --noconfirm brightnessctl
paru -S --needed --noconfirm picom
paru -S --needed --noconfirm alacritty
paru -S --needed --noconfirm mpv
paru -S --needed --noconfirm scrot
paru -S --needed --noconfirm loupe
paru -S --needed --noconfirm gnome-calculator
paru -S --needed --noconfirm gnome-screenshot
# paru -S --needed --noconfirm gnome-shell-extension-dash-to-panel
paru -S --needed --noconfirm nautilus
paru -S --needed --noconfirm evince
# paru -S --needed --noconfirm popsicle-bin
paru -S --needed --noconfirm pizarra-bin
paru -S --needed --noconfirm tor
sudo systemctl enable tor
paru -S --needed --noconfirm firefox
paru -S --needed --noconfirm proton-vpn-gtk-app
paru -S --needed --noconfirm qbittorrent
paru -S --needed --noconfirm appimagelauncher
# paru -S --needed --noconfirm discord
# fixes long gtk app startup (dbus timeout)
paru -S --needed --noconfirm flatpak
flatpak install -y com.github.tchx84.Flatseal
flatpak install -y com.discordapp.Discord
paru -S --needed --noconfirm krita
paru -S --needed --noconfirm localsend-bin
paru -S --needed --noconfirm p7zip
paru -S --needed --noconfirm zip

## scripts
paru -S --needed --noconfirm pv
paru -S --needed --noconfirm pigz

## launcher
paru -S --needed --noconfirm rofi

## modern utils
paru -S --needed --noconfirm rustup
rustup install stable
paru -S --needed --noconfirm btop
paru -S --needed --noconfirm dua-cli
paru -S --needed --noconfirm bat
paru -S --needed --noconfirm dysk
paru -S --needed --noconfirm tealdeer
paru -S --needed --noconfirm eza
paru -S --needed --noconfirm ripgrep-all
paru -S --needed --noconfirm fd
paru -S --needed --noconfirm helix
paru -S --needed --noconfirm gitui
paru -S --needed --noconfirm starship
cargo install rusti-cal
paru -S --needed --noconfirm yazi
paru -S --needed --noconfirm bluetuith
paru -S --needed --noconfirm difftastic
paru -S --needed --noconfirm mermaid-cli
paru -S --needed --noconfirm xan

## theme
paru -S --needed --noconfirm gnome-themes-extra
paru -S --needed --noconfirm papirus-icon-theme
paru -S --needed --noconfirm vimix-cursors
paru -S --needed --noconfirm ttf-roboto
paru -S --needed --noconfirm ttf-roboto-mono
# paru -S --needed --noconfirm lxappearance-gtk3
# paru -S --needed --noconfirm kvantum
paru -S --needed --noconfirm qt5ct
paru -S --needed --noconfirm qt6ct
paru -S --needed --noconfirm adwaita-qt5-git
paru -S --needed --noconfirm adwaita-qt6-git
gsettings set org.gnome.desktop.interface color-scheme prefer-dark


# DEVELOPMENT
paru -S --needed --noconfirm base-devel
paru -S --needed --noconfirm rust-analyzer
paru -S --needed --noconfirm mold
paru -S --needed --noconfirm ctags
paru -S --needed --noconfirm uv
paru -S --needed --noconfirm ruff
paru -S --needed --noconfirm python-lsp-server
paru -S --needed --noconfirm lldb
paru -S --needed --noconfirm bash-language-server


# # MEDIA
# paru -S --needed --noconfirm nfs-utils
# paru -S --needed --noconfirm mariadb
# sudo systemctl enable mysqld
# mysql -e "CREATE USER 'kodi' IDENTIFIED BY 'kodi';"
# mysql -e "GRANT ALL ON *.* TO 'kodi';"
# mysql -e "flush privileges;"
# paru -S --needed --noconfirm kodi
# mkdir -p ~/Videos/movies
# mkdir -p ~/Videos/shows
# sudo mkdir -p /srv/nfs/videos
# sudo su -c "echo \n >> /etc/fstab"
# sudo su -c "echo /home/nikv/Videos /srv/nfs/videos none defaults,bind 0 0 >> /etc/fstab"

if [[ $gaming == true ]] then
  # GAMING
  paru -S --needed --noconfirm gamemode
  paru -S --needed --noconfirm lib32-gamemode
  paru -S --needed --noconfirm mangohud
  paru -S --needed --noconfirm gamescope
  paru -S --needed --noconfirm lib32-vulkan-radeon
  paru -S --needed --noconfirm lib32-vulkan-mesa-layers
  paru -S --needed --noconfirm amdvlk
  paru -S --needed --noconfirm lib32-amdvlk
  flatpak install -y com.vysp3r.ProtonPlus

  ## steam
  paru -S --needed --noconfirm steam-native-runtime
  paru -S --needed --noconfirm linux-steam-integration

  # flatpak install -y com.usebottles.bottles

  ## appimages
  # install_appimage WowUp WowUp WowUp
  # install_appimage RPGLogs Uploaders-warcraftlogs Warcraft-Logs-Uploader
  # curl -fLo ~/Applications/curseforge-latest-linux.zip https://curseforge.overwolf.com/downloads/curseforge-latest-linux.zip --create-dirs
  # cd ~/Applications
  # unzip curseforge-latest-linux.zip
  # rm curseforge-latest-linux.zip
  # cd

  ## wine
  paru -S --needed --noconfirm dxvk-bin
  paru -S --needed --noconfirm lib32-vkd3d
  paru -S --needed --noconfirm vkd3d
  paru -S --needed --noconfirm wine-staging
  paru -S --needed --noconfirm wine-gecko
  paru -S --needed --noconfirm wine-mono
  paru -S --needed --noconfirm wine-nine
  paru -S --needed --noconfirm winetricks

  ## lutris
  paru -S --needed --noconfirm lutris
  # no longer exists?
  # paru -S --needed --noconfirm lutris-battlenet-meta
  paru -S --needed --noconfirm lutris-wine-meta
  # out of date?
  # paru -S --needed --noconfirm lutris-world-of-warcraft-dependencies-nvidia
  paru -S --needed --noconfirm umu-launcher
  paru -S --needed --noconfirm qpdf
  paru -S --needed --noconfirm cups
  paru -S --needed --noconfirm cups-filters
  paru -S --needed --noconfirm samba
  paru -S --needed --noconfirm lib32-nvidia-utils

  ## heroic
  paru -S --needed --noconfirm heroic-games-launcher-bin


  # LOGIN
  sudo cp ~/.config/monitors.xml /var/lib/gdm/.config/
fi


if [[ $portable == true ]] then
  # PORTABLE
  paru -S --needed --noconfirm battop
  paru -S --needed --noconfirm tlp
  paru -S --needed --noconfirm tlp-rdw
  sudo systemctl enable tlp.service
  sudo systemctl mask systemd-rfkill.service
  sudo systemctl mask systemd-rfkill.socket
  sudo sd "#START_CHARGE_THRESH_BAT0=75" "START_CHARGE_THRESH_BAT0=75" /etc/tlp.conf
  sudo sd "#STOP_CHARGE_THRESH_BAT0=80" "STOP_CHARGE_THRESH_BAT0=80" /etc/tlp.conf
  sudo sd "#RESTORE_THRESHOLDS_ON_BAT=1" "RESTORE_THRESHOLDS_ON_BAT=1" /etc/tlp.conf
fi


if [[ $work == true ]] then
  # WORK
  paru -S --needed --noconfirm qt
  paru -S --needed --noconfirm qtcreator
  paru -S --needed --noconfirm jdk-openjdk
  paru -S --needed --noconfirm jdtls

  # google drive
  paru -S --needed --noconfirm opam
  if [[ $update_only == false ]] then
    opam init
    opam update
    opam install depext
    opam depext google-drive-ocamlfuse
    opam install google-drive-ocamlfuse
  fi
fi
